% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deeppamm.R
\name{deeppamm}
\alias{deeppamm}
\title{DEEPPAMM}
\description{
DEEPPAMM

DEEPPAMM
}
\details{
R6 object to create a deeppamm instance resembling the DEEPPAMM method 
proposed in Kopper et al. (2022), https://arxiv.org/abs/2202.07423
The instance can be used to create a DEEPPAMM model, fit it, and predict from it.
DEEPPAMM is a semi-structured deep learning method for survival analysis.
It can model both, unstructured and structured data.
Structured data can be modeled through a GAM subnetwork (shallow) or deep subnetwork.
DEEPPAMM is capable of fitting competing risks.
The initialization does not build the network yet or majorly transforms data 
apart from scaling if applicable.
The workflow is as follows: $initialize(...), $make_model(...), $train(...), $preidict
After making the model a Keras model will be contained in $model; 
it can be worked with in the same fashion as all Keras models.
Keras and Tensorflow are used in R which are powered through the reticulate
package.
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-deeppamm-new}{\code{deeppamm$new()}}
\item \href{#method-deeppamm-change_precision}{\code{deeppamm$change_precision()}}
\item \href{#method-deeppamm-make_model}{\code{deeppamm$make_model()}}
\item \href{#method-deeppamm-make_ped}{\code{deeppamm$make_ped()}}
\item \href{#method-deeppamm-make_net}{\code{deeppamm$make_net()}}
\item \href{#method-deeppamm-train}{\code{deeppamm$train()}}
\item \href{#method-deeppamm-predictHaz}{\code{deeppamm$predictHaz()}}
\item \href{#method-deeppamm-predictStdHaz}{\code{deeppamm$predictStdHaz()}}
\item \href{#method-deeppamm-predictCumHaz}{\code{deeppamm$predictCumHaz()}}
\item \href{#method-deeppamm-predictSurvProb}{\code{deeppamm$predictSurvProb()}}
\item \href{#method-deeppamm-predictCIFs}{\code{deeppamm$predictCIFs()}}
\item \href{#method-deeppamm-clone}{\code{deeppamm$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-deeppamm-new"></a>}}
\if{latex}{\out{\hypertarget{method-deeppamm-new}{}}}
\subsection{Method \code{new()}}{
Creates a new instance of this [R6][R6::R6Class] class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{deeppamm$new(
  formulas,
  deep_architectures = list(),
  data,
  trafo_fct = Surv(time, status) ~ .,
  cut = NULL,
  lr = 0.001,
  scale = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{formulas}}{Either a list of formulas for all competing risks or a single formula 
that is applied to all competing risks. The formula MUST contain
Y as the target (lhs) and consider the time variable (rhs; this is to 
account for the baseline hazard). Next to that rules for formulas from
mgcv::gam apply. Additionally, you can include deep architectures in
formulas that need to be supplied in deep_architectures}

\item{\code{deep_architectures}}{(`list()`)\cr
A named list of all deep architectures that are used in formulas.
See examples to see the construction convention.}

\item{\code{data}}{Either a data.frame (if there is no unstructured data) or a list that 
contains the survival data set in the first entry and all other modalities
in the following ones. All unstructured modalities must be named so that 
they can be matched in formulas}

\item{\code{trafo_fct}}{(`formula`)\cr
Transformation formula that creates a PED object (pammtools package).
LHS needs to be changed in accordance with variable names for event time
(time) and survival status (status), RHS can be changed if only a subset
of features of the data is neeeded.}

\item{\code{cut}}{A vector of discretization points used for the piecewise exponential 
model. Does not need to be provided, in this case all distinct event 
times are taken (not suggested).}

\item{\code{lr}}{A numeric scalar to determine the learning rate of the Adam optimizer
used for the NN.}

\item{\code{scale}}{A logical that indicates whether or not the structured data should be 
scaled. The event time (even though it is used as feature) is not scaled.
Data augmentation and scaling for the unstructured data needs to be
applied before supplying them.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-deeppamm-change_precision"></a>}}
\if{latex}{\out{\hypertarget{method-deeppamm-change_precision}{}}}
\subsection{Method \code{change_precision()}}{
Changes TF precision
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{deeppamm$change_precision(dtype = "float64")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dtype}}{The data type to which the precision in TF is to be changed.
Default change is from 32bit (default) to 64bit.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-deeppamm-make_model"></a>}}
\if{latex}{\out{\hypertarget{method-deeppamm-make_model}{}}}
\subsection{Method \code{make_model()}}{
Create the model and reshape the data so that we can train a DEEPPAMM
in the following.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{deeppamm$make_model(params = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{params}}{optional parameter, if supplied needs to be a list with parameters 
for the strucured part of the architecture. The list must contain:
params$trainable_struct, params$pretrain, params$lambdas
referring to whether or not the structured part should be trained (only
meaningful if pretrained), the structured mode should be pretrained 
with a GAM and a list of lambdas to apply L2 regularization for linear 
effects or to scale the penalization applied to smooth terms.
Use this interface when tuning the structured part; tuning deep parameters
can only be done via an outer loop.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-deeppamm-make_ped"></a>}}
\if{latex}{\out{\hypertarget{method-deeppamm-make_ped}{}}}
\subsection{Method \code{make_ped()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{deeppamm$make_ped(
  data,
  formulas,
  trafo_fct,
  cut,
  cr,
  n_cr,
  multimodal,
  train = TRUE
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-deeppamm-make_net"></a>}}
\if{latex}{\out{\hypertarget{method-deeppamm-make_net}{}}}
\subsection{Method \code{make_net()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{deeppamm$make_net(
  deep_architectures,
  formulas,
  trainable_struct = TRUE,
  pretrain = FALSE,
  lambdas = NULL
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-deeppamm-train"></a>}}
\if{latex}{\out{\hypertarget{method-deeppamm-train}{}}}
\subsection{Method \code{train()}}{
train the DEEPPAMM after constructing the model and data with $make_model
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{deeppamm$train(epochs, batch_size, callbacks, val_split = 0.1)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{epochs}}{number of epochs used for training (integer+)}

\item{\code{batch_size}}{batch size used for training (integer+)}

\item{\code{callbacks}}{callbacks passed down to keras::fit}

\item{\code{val_split}}{validation split used for training (early stopping)}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-deeppamm-predictHaz"></a>}}
\if{latex}{\out{\hypertarget{method-deeppamm-predictHaz}{}}}
\subsection{Method \code{predictHaz()}}{
Hazard Prediction

Predict hazards based on the intervals used for training on new data.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{deeppamm$predictHaz(new_data, full = TRUE, verbose = FALSE, time = "time")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{new_data}}{New data provided for prediciton. MUST have identical format to training 
data, also names MUST match.}

\item{\code{full}}{logical, should the full follow up be predicted or only until event?}

\item{\code{verbose}}{logical, verbosity passed to keras::predict}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-deeppamm-predictStdHaz"></a>}}
\if{latex}{\out{\hypertarget{method-deeppamm-predictStdHaz}{}}}
\subsection{Method \code{predictStdHaz()}}{
Standardized Cause Specific Hazard Prediction

Predict hazards based on new intervals on new data for a single cause.
The whole follow-up is predicted.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{deeppamm$predictStdHaz(new_data, intervals = NULL, cause = 1L)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{new_data}}{New data provided for prediction. MUST have identical format to training 
data, also names MUST match.}

\item{\code{intervals}}{integer+, intervals used for prediction, if not supplied: use the training
intervals}

\item{\code{cause}}{integer+, cause to predict cause-specific hazards for; in single risk case:
1L}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-deeppamm-predictCumHaz"></a>}}
\if{latex}{\out{\hypertarget{method-deeppamm-predictCumHaz}{}}}
\subsection{Method \code{predictCumHaz()}}{
Cause Specific Cumulative Hazard Prediction

Predict cumulative hazards based on new intervals on new data for a 
single cause. The whole follow-up is predicted.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{deeppamm$predictCumHaz(new_data, intervals = NULL, cause = 1L)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{new_data}}{New data provided for prediction. MUST have identical format to training 
data, also names MUST match.}

\item{\code{intervals}}{integer+, intervals used for prediction, if not supplied: use the training
intervals}

\item{\code{cause}}{integer+, cause to predict cause-specific hazards for; in single risk case:
1L}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-deeppamm-predictSurvProb"></a>}}
\if{latex}{\out{\hypertarget{method-deeppamm-predictSurvProb}{}}}
\subsection{Method \code{predictSurvProb()}}{
(Cause Specific) Survival Probability Prediction

Predict survival probabilities based on new intervals on new data for a 
single cause. The whole follow-up is predicted.
In most cases, you rather want to use predictCIFs in competing risks 
settings. Hence, we recommend to use this function just for single risk.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{deeppamm$predictSurvProb(new_data, intervals = NULL, cause = 1L)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{new_data}}{New data provided for prediction. MUST have identical format to training 
data, also names MUST match.}

\item{\code{intervals}}{integer+, intervals used for prediction, if not supplied: use the training
intervals}

\item{\code{cause}}{integer+, cause to predict cause-specific hazards for; in single risk case:
1L}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-deeppamm-predictCIFs"></a>}}
\if{latex}{\out{\hypertarget{method-deeppamm-predictCIFs}{}}}
\subsection{Method \code{predictCIFs()}}{
Cumulative Incidence Functions (CIFs) Predictions

Predict CIFs based on new intervals on new data for a all causes.
The whole follow-up is predicted.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{deeppamm$predictCIFs(new_data, intervals)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{new_data}}{New data provided for prediction. MUST have identical format to training 
data, also names MUST match.}

\item{\code{intervals}}{integer+, intervals used for prediction, if not supplied: use the training
intervals}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-deeppamm-clone"></a>}}
\if{latex}{\out{\hypertarget{method-deeppamm-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{deeppamm$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
